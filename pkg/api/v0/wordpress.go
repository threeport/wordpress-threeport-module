// originally generated by 'threeport-sdk create' for API object
// scaffolding but will not be re-generated - intended for modification

package v0

import tpapi_v0 "github.com/threeport/threeport/pkg/api/v0"

type WordpressDefinition struct {
	tpapi_v0.Common         `mapstructure:",squash" swaggerignore:"true"`
	tpapi_v0.Reconciliation `mapstructure:",squash"`
	tpapi_v0.Definition     `mapstructure:",squash"`

	// The environment type used to determine config settings for a wordpress
	// definition.
	Environment *string `json:"Environment,omitempty" query:"environment" gorm:"default:dev" validate:"optional"`

	// The number of pod replicas to deploy for the WordPress app
	Replicas *int `json:"Replicas,omitempty" query:"replicas" validate:"optional"`

	// If true, a cloud provider's managed database will be used for the
	// WordPress DB.  If false, a containerized database will be deployed to
	// Kubernetes.
	ManagedDatabase *bool `json:"ManagedDatabase,omitempty" query:"manageddatabase" gorm:"default:false" validate:"optional"`

	WordpressInstances []*WordpressInstance `json:"WordpressInstances,omitempty" validate:"optional,association"`
}

type WordpressInstance struct {
	tpapi_v0.Common         `mapstructure:",squash" swaggerignore:"true"`
	tpapi_v0.Reconciliation `mapstructure:",squash"`
	tpapi_v0.Instance       `mapstructure:",squash"`

	// When using a DomainName, the subdomain to use to reach the WordPress
	// instance.
	SubDomain *string `jaon:"SubDomain,omitempty" query:"subdomain" validate:"optional"`

	WordpressDefinitionID *uint `gorm:"not null" json:"WordpressDefinitionID,omitempty" query:"wordpressdefinitionid" validate:"required"`
}
